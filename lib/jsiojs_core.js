"use strict";

var colors = require('colors')
var FS = require("q-io/fs")
var Q = require("q");

var exports = module.exports = {};
  
exports.createFile =  function(filename){
    return Q()
      .then(function(){
        return checkJsFile(filename)
       })
      .then(function(){
        return checkFileNotExist(filename)
        })
      .then(function(){
        return FS.write(filename, '// Generated by JsIo.js\n')
      });
  }
  
exports.deleteFile =  function(filename){
    return Q()
      .then(function(){  
        return checkJsFile(filename)
       })
      .then(function(){
        return checkFileExist(filename)
       })
      .then(function(){
        return FS.remove(filename)
      })
  }
  
exports.renameFile =  function(oldname, newname){
    return Q()
      .then(function(){  
        return checkJsFile(oldname)
       })
      .then(function(){
        return checkJsFile(newname)
       })
      .then(function(){
        return checkFileExist(oldname)
       })
      .then(function(){
        return checkFileNotExist(newname)
       })
      .then(function(){
        return FS.rename(oldname, newname)
      })
  }    

exports.copyFile =  function(source, destination){
    return Q()
      .then(function(){  
        return checkJsFile(source)
       })
      .then(function(){
        return checkJsFile(destination)
       })
      .then(function(){
        return checkFileExist(source)
       })
      .then(function(){
        return checkFileNotExist(destination)
       })
      .then(function(){
        return FS.copy(source, destination)
      })
  }
  
exports.showFile =  function(filename){
    return Q()
      .then(function(){  
        return checkJsFile(filename)
       })
      .then(function(){
        return checkFileExist(filename)
       })
      .then(function(){
        return FS.read(filename, "r")
      })
  }
  
function checkJsFile(filename){
  var deferred = Q.defer()  
  if(filename === undefined) {
    deferred.reject("file name is missing")
  } else if(filename.length < 4 || filename.substring(filename.length-3) !== ".js"){
    deferred.reject(filename+" is not a valid javascript file name")
  } else {
    deferred.resolve()
  }
  return deferred.promise
}  

function checkFileExist(filename){
  var deferred = Q.defer();
  FS.exists(filename).then(function(result){
    if(result){
      deferred.resolve()
    } else {
      deferred.reject(filename+"  does not exist")
    }
  })
  return deferred.promise  
}

function checkFileNotExist(filename){
  var deferred = Q.defer();
  FS.exists(filename).then(function(result){
    if(result){
      deferred.reject(filename+" already exists")
    } else {
      deferred.resolve()
    }
  })
  return deferred.promise
}